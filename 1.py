# üìç –ü—Ä–æ–≥—Ä–∞–º–º–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–≤—É—Ö —Ç–æ—á–µ–∫ 
# –∏ –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ 2D –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
#
# (—É–ª—É—á—à–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª—è–º–±–¥, filter, map, zip, enumerate, list comprehension)

a = [int(input(f'‚úèÔ∏è  –í–≤–µ–¥–∏—Ç–µ "{i}" –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –¥–ª—è —Ç–æ—á–∫–∏ "a": ')) for i in "xy"]
b = [int(input(f'‚úèÔ∏è  –í–≤–µ–¥–∏—Ç–µ "{i}" –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –¥–ª—è —Ç–æ—á–∫–∏ "b": ')) for i in "xy"]
result = sum([(element[1] - element[0])**2 for element in zip(a, b)])**0.5
print(f'üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ "a" –∏ "b" –≤ 2D –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ = {result}')